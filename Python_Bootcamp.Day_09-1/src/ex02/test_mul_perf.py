from itertools import tee
from time import monotonic
import matrix_multiply


def mul(a, b):
    b_iter = tee(zip(*b), len(a))
    return [
        [
            sum(ele_a*ele_b for ele_a, ele_b in zip(row_a, col_b))
            for col_b in b_iter[i]
        ] for i, row_a in enumerate(a)
    ]


def test_matrix_multiply_time_1():
    A = [[1, 4, 3], [4, 9, 6]]
    B = [[7, 8], [9, 10], [11, 12]]
    begin_c = monotonic()
    result_c = matrix_multiply.mul(A, B)
    end_c = monotonic() - begin_c
    begin_py = monotonic()
    result_py = mul(A, B)
    end_py = monotonic() - begin_py
    print(result_c)
    print(end_c, end_py)
    assert result_c == result_py
    assert end_c <= end_py


def test_matrix_multiply_time_2():
    A = [[1324, 446243, 3234, 1234, 44634, 376, 541, 434532, 32342, 1243, 4234, 3234, 132423, 4234, 3234, 1234, 4234, 3234],
         [4324, 946243, 6234, 1234, 44634, 376, 541, 434532, 32342,
             1243, 4234, 3234, 132423, 4234, 3234, 1234, 4234, 3234],
         [1324, 446243, 3234, 1234, 44634, 376, 541, 434532, 32342,
             1243, 4234, 3234, 132423, 4234, 3234, 1234, 4234, 3234],
         [1324, 446243, 3234, 1234, 44634, 376, 541, 434532, 32342,
             1243, 4234, 3234, 132423, 4234, 3234, 1234, 4234, 3234],
         [1324, 446243, 3234, 1234, 44634, 376, 541, 434532, 32342,
             1243, 4234, 3234, 132423, 4234, 3234, 1234, 4234, 3234],
         [4324, 946243, 6234, 1234, 44634, 376, 541, 434532, 32342,
             1243, 4234, 3234, 132423, 4234, 3234, 1234, 4234, 3234],
         [1324, 446243, 3234, 1234, 44634, 376, 541, 434532, 32342,
             1243, 4234, 3234, 132423, 4234, 3234, 1234, 4234, 3234],
         [1324, 446243, 3234, 1234, 44634, 376, 541, 434532, 32342, 1243, 4234, 3234, 132423, 4234, 3234, 1234, 4234, 3234]]
    B = [[7, 8, 7, 8, 7, 8, 7, 8], [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12, 11, 12, 11, 12],
         [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12,
                                        11, 12, 11, 12], [7, 8, 7, 8, 7, 8, 7, 8],
         [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12,
                                        11, 12, 11, 12], [7, 8, 7, 8, 7, 8, 7, 8],
         [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12,
                                        11, 12, 11, 12], [7, 8, 7, 8, 7, 8, 7, 8],
         [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12,
                                        11, 12, 11, 12], [7, 8, 7, 8, 7, 8, 7, 8],
         [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12,
                                        11, 12, 11, 12], [7, 8, 7, 8, 7, 8, 7, 8],
         [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12,
                                        11, 12, 11, 12], [7, 8, 7, 8, 7, 8, 7, 8],
         [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12,
                                        11, 12, 11, 12], [7, 8, 7, 8, 7, 8, 7, 8],
         [9, 10, 9, 10, 9, 10, 9, 10], [11, 12, 11, 12, 11, 12, 11, 12], [7, 8, 7, 8, 7, 8, 7, 8]]
    begin_c = monotonic()
    result_c = matrix_multiply.mul(A, B)
    end_c = monotonic() - begin_c
    begin_py = monotonic()
    result_py = mul(A, B)
    end_py = monotonic() - begin_py
    assert result_c == result_py
    assert end_c <= end_py
